// Generates a JS/TS client with associated types
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-arm64-openssl-1.0.x"]
}

// Configures the datasource, not sure how to fallback to defaults, maybe an .env file?
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // eg = "postgresql://johndoe:mypassword@localhost:5432/mydb?schema=public"
}

model NodaryApiValues {
  id                   String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  dataFeedId           String
  name                 String
  when                 DateTime
  apiValue             Float
  nodaryDeviation      Float
  nodaryTimestampDelta Int
  providerName         String
  inBeaconSet          Boolean  @default(false)
}

model BeaconSetEvents {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  when            DateTime
  dataFeedId      String
  apiValue        Float
  chain           String
  name            String
  nodaryDeviation Float
  inBeaconSet     Boolean  @default(false)
}

model LastBeaconSetEventsTracking {
  chainId   String   @id
  chainName String
  lastEvent DateTime
}

model DApiMetadata {
  id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid // an arbitary ID
  name        String // The name of this DAPI (eg. "USD/EUR")
  beaconSetId String?
  beaconId    String? @db.Text
}

model BeaconMetadata {
  dataFeedId   String @id
  name         String
  providerName String

  @@index([dataFeedId])
  @@index([name])
  @@index([providerName])
}

model BeaconSetMetadata {
  dataFeedId String   @id
  name       String
  beaconIds  String[]

  @@index([dataFeedId])
  @@index([name])
}

model BeaconSetChildren {
  id          String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  beaconSetId String
  name        String
  beaconId    String
}

model DataFeedApiValue {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  when       DateTime @default(now())
  dataFeedId String
  apiValue   Float
  timestamp  DateTime
  fromNodary Boolean  @default(false)

  @@index([dataFeedId])
}

model DeviationValue {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  when       DateTime @default(now())
  dataFeedId String
  chainId    String
  deviation  Float

  @@index([dataFeedId, chainId])
}

model WalletBalance {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  when          DateTime @default(now())
  walletAddress String
  chainId       String
  balance       String

  @@index([walletAddress, chainId])
}
